// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Daniel Lee",
            "email": "daniel@internet.ru"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/transactions": {
            "get": {
                "description": "Returns all transaction list by creation date order(asc/desc)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain",
                        "name": "chain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The limit of the number of items",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Enable desc order",
                        "name": "recent",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transactions.TxsResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/transactions/user": {
            "get": {
                "description": "Returns all user transaction list by creation date order(asc/desc)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain",
                        "name": "chain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Address that made transactions",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The limit of the number of items",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Enable desc order",
                        "name": "recent",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transactions.TxsResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/transactions/{hash}": {
            "get": {
                "description": "Returns transaction details by hash",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain",
                        "name": "chain",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transactions.TxResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httperr.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "transactions.Tx": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "string"
                },
                "data": {},
                "fee": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "sequence": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "transactions.TxResp": {
            "type": "object",
            "properties": {
                "status_code": {
                    "type": "integer"
                },
                "tx": {
                    "$ref": "#/definitions/transactions.Tx"
                }
            }
        },
        "transactions.TxsResp": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page_number": {
                    "type": "integer"
                },
                "status_code": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                },
                "txs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transactions.Tx"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Blockchain Indexer API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
