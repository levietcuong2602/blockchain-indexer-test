// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// 2022-09-16 21:36:49.155227 &#43;0900 KST m=&#43;0.002672584
// using data from coins.yml
package coin

import (
	"fmt"
)

const (
	coinPrefix  = "c"
	tokenPrefix = "t"
)

// Coin is the native currency of a blockchain
type Coin struct {
	ID               uint
	Handle           string
	Symbol           string
	Name             string
	Decimals         uint
	BlockTime        int
	MinConfirmations int64
	Blockchain       string // Name of the Blockchain which core is used for this network
}

type AssetID string

func (c *Coin) String() string {
	return fmt.Sprintf("[%s] %s (#%d)", c.Symbol, c.Name, c.ID)
}

func (c Coin) AssetID() AssetID {
	return AssetID(coinPrefix + fmt.Sprint(c.ID))
}

func (c Coin) TokenAssetID(t string) AssetID {
	result := c.AssetID()
	if len(t) > 0 {
		result += AssetID("_" + tokenPrefix + t)
	}

	return result
}

const (
	ETHEREUM   = 60
	COSMOS     = 118
	BINANCE    = 714
	BITCOIN    = 0
	SOLANA     = 501
	SMARTCHAIN = 20000714
)

var Coins = map[uint]Coin{
	ETHEREUM: {
		ID:               60,
		Handle:           "ethereum",
		Symbol:           "ETH",
		Name:             "Ethereum",
		Decimals:         18,
		BlockTime:        10000,
		MinConfirmations: 0,
		Blockchain:       "Ethereum",
	},
	COSMOS: {
		ID:               118,
		Handle:           "cosmos",
		Symbol:           "ATOM",
		Name:             "Cosmos",
		Decimals:         6,
		BlockTime:        5000,
		MinConfirmations: 0,
		Blockchain:       "Cosmos",
	},
	BINANCE: {
		ID:               714,
		Handle:           "binance",
		Symbol:           "BNB",
		Name:             "BNB",
		Decimals:         8,
		BlockTime:        1000,
		MinConfirmations: 2,
		Blockchain:       "Binance",
	},
	BITCOIN: {
		ID:               0,
		Handle:           "bitcoin",
		Symbol:           "BTC",
		Name:             "Bitcoin",
		Decimals:         8,
		BlockTime:        600000,
		MinConfirmations: 0,
		Blockchain:       "Bitcoin",
	},
	SOLANA: {
		ID:               501,
		Handle:           "solana",
		Symbol:           "SOL",
		Name:             "Solana",
		Decimals:         9,
		BlockTime:        500,
		MinConfirmations: 0,
		Blockchain:       "Solana",
	},
	SMARTCHAIN: {
		ID:               20000714,
		Handle:           "smartchain",
		Symbol:           "BNB",
		Name:             "Smart Chain",
		Decimals:         18,
		BlockTime:        3000,
		MinConfirmations: 0,
		Blockchain:       "Ethereum",
	},
}

var Chains = map[string]Coin{
	Ethereum().Handle: {
		ID:               60,
		Handle:           "ethereum",
		Symbol:           "ETH",
		Name:             "Ethereum",
		Decimals:         18,
		BlockTime:        10000,
		MinConfirmations: 0,
		Blockchain:       "Ethereum",
	},
	Cosmos().Handle: {
		ID:               118,
		Handle:           "cosmos",
		Symbol:           "ATOM",
		Name:             "Cosmos",
		Decimals:         6,
		BlockTime:        5000,
		MinConfirmations: 0,
		Blockchain:       "Cosmos",
	},
	Binance().Handle: {
		ID:               714,
		Handle:           "binance",
		Symbol:           "BNB",
		Name:             "BNB",
		Decimals:         8,
		BlockTime:        1000,
		MinConfirmations: 2,
		Blockchain:       "Binance",
	},
	Bitcoin().Handle: {
		ID:               0,
		Handle:           "bitcoin",
		Symbol:           "BTC",
		Name:             "Bitcoin",
		Decimals:         8,
		BlockTime:        600000,
		MinConfirmations: 0,
		Blockchain:       "Bitcoin",
	},
	Solana().Handle: {
		ID:               501,
		Handle:           "solana",
		Symbol:           "SOL",
		Name:             "Solana",
		Decimals:         9,
		BlockTime:        500,
		MinConfirmations: 0,
		Blockchain:       "Solana",
	},
	Smartchain().Handle: {
		ID:               20000714,
		Handle:           "smartchain",
		Symbol:           "BNB",
		Name:             "Smart Chain",
		Decimals:         18,
		BlockTime:        3000,
		MinConfirmations: 0,
		Blockchain:       "Ethereum",
	},
}

func Ethereum() Coin {
	return Coins[ETHEREUM]
}

func Cosmos() Coin {
	return Coins[COSMOS]
}

func Binance() Coin {
	return Coins[BINANCE]
}

func Bitcoin() Coin {
	return Coins[BITCOIN]
}

func Solana() Coin {
	return Coins[SOLANA]
}

func Smartchain() Coin {
	return Coins[SMARTCHAIN]
}
